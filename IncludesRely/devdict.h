#ifndef __DEVDICT_H__
#define __DEVDICT_H__

#include "hncdatatype.h"

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_write(Bit32 ax_no, Bit32 i)
//
//    功能：
//					伺服参数下载
//
//    参数：
//					Bit32 ax_no：逻辑轴号
//					Bit32 i：伺服参数序号
//
//    描述：
//                  设置伺服参数下载标志
//
//	  返回：
//					返回0：成功
//                  返回-1：失败
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_write(Bit32 ax_no, Bit32 i);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_write_axis(Bit32 ax_no)
//
//    功能：
//					下载指定轴全部伺服参数
//
//    参数：
//					Bit32 ax_no：逻辑轴号
//
//    描述：
//                  设置伺服参数下载标志
//
//	  返回：
//					返回0：成功
//                  返回-1：失败
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_write_axis(Bit32 ax_no);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_write_all(void)
//
//    功能：
//					将本地伺服参数全部下载到伺服驱动器
//
//    参数：
//
//    描述：
//                  设置伺服参数下载标志
//
//	  返回：
//					返回0：成功
//                  返回-1：失败
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_write_all(void);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_read(Bit32 ax_no, Bit32 i)
//
//    功能：
//					伺服参数上传
//
//    参数：
//					Bit32 ax_no：逻辑轴号
//					Bit32 i：伺服参数序号
//
//    描述：
//                  设置伺服参数上传标志	
//
//	  返回：
//					返回0：成功
//                  返回-1：失败					
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_read(Bit32 ax_no, Bit32 i);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_read_axis(Bit32 ax_no)
//
//    功能：
//					上传指定轴全部伺服参数
//
//    参数：
//					Bit32 ax_no：逻辑轴号
//
//    描述：
//                  设置伺服参数上传标志
//
//	  返回：
//					返回0：成功
//                  返回-1：失败
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_read_axis(Bit32 ax_no);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_read_all(void)
//
//    功能：
//					上传全部伺服驱动器参数
//
//    参数：
//
//    描述：
//                  设置伺服参数上传标志
//
//	  返回：
//					返回0：成功
//                  返回-1：失败
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_read_all(void);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_check(Bit32 ax_no, Bit32 i)
//
//    功能：
//					伺服参数一致性检查
//
//    参数：
//					Bit32 ax_no：逻辑轴号
//					Bit32 i：伺服参数序号
//
//    描述：
//                  系统本地伺服参数VS伺服驱动器从站参数
//
//	  返回：
//                  返回1：不一致
//					返回0：一致
//                  返回-1：失败
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_check(Bit32 ax_no, Bit32 i);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_check_axis(Bit32 ax_no)
//
//    功能：
//					指定轴伺服参数一致性检查
//
//    参数：
//					Bit32 ax_no：逻辑轴号
//
//    描述：
//                  系统本地伺服参数VS伺服驱动器从站参数
//
//	  返回：
//                  返回1：不一致
//					返回0：一致
//                  返回-1：失败
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_check_axis(Bit32 ax_no);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_sync_all(void)
//
//    功能：
//					同步所有伺服驱动器参数
//
//    参数：
//
//    描述：
//					系统本地伺服参数->伺服驱动器
//					同步后自动保存伺服驱动器参数
//
//	  返回：
//					返回0：成功
//                  返回-1：失败
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_sync_all(void);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_sync_axis(Bit32 ax_no)
//
//    功能：
//					指定轴伺服参数同步
//
//    参数：
//					Bit32 ax_no：逻辑轴号
//
//    描述：
//					系统本地伺服参数->伺服驱动器
//					同步后自动保存伺服驱动器参数
//
//	  返回：
//					返回0：成功
//                  返回-1：失败
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_sync_axis(Bit32 ax_no);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_is_change(void)
//
//    功能：
//					检查设备数据字典是否修改
//
//    参数：
//
//    描述：
//                  目前仅检查伺服参数是否修改
//
//	  返回：
//					返回0：未修改
//                  返回1：已修改
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_is_change(void);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_clear_change_flag(void)
//
//    功能：
//					清除设备数据字典修改标志
//
//    参数：
//
//    描述：
//                  目前仅针对伺服参数修改标志
//
//	  返回：
//					返回0：成功
//                  返回-1：失败
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_clear_change_flag(void);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_save_all(void)
//
//    功能：
//					通知所有伺服驱动器保存参数
//
//    参数：
//
//    描述：
//
//	  返回：
//					返回0：成功
//                  返回-1：失败
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_save_all(void);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_save_axis(Bit32 ax_no)
//
//    功能：
//					通知与指定轴关联的伺服驱动器保存参数
//
//    参数：
//					Bit32 ax_no：逻辑轴号
//
//    描述：
//
//	  返回：
//					返回0：成功
//                  返回-1：失败
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_save_axis(Bit32 ax_no);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_get_wr_state(Bit32 ax_no, Bit32 i)
//
//    功能：
//					获取指定伺服参数通讯状态
//
//    参数：
//					Bit32 ax_no：逻辑轴号
//					Bit32 i：参数序号
//
//    描述：
//
//	  返回：
//                  返回-1：指定伺服参数出错
//                  返回0：空闲
//					返回1：读写通讯中
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_get_wr_state(Bit32 ax_no, Bit32 i);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_get_save_state(void)
//
//    功能：
//					检查伺服驱动器是否处于保存参数状态
//
//    参数：
//
//    描述：
//
//	  返回：
//					返回1：保存中
//                  返回0：空闲
//                  返回-1：获取伺服参数保存状态出错
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_get_save_state(void);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_get_bus_state(void)
//
//    功能：
//				获取总线通讯状态
//
//    参数：
//
//    描述：
//
//	  返回：
//				返回0：总线通讯未准备好
//				返回1：总线通讯已准备好，通讯空闲
//				返回2：总线通讯已准备好，通讯忙
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_get_bus_state(void);

////////////////////////////////////////////////////////////////////////
//
//	  Bit32 hdict_get_nc_axis_mask(void)
//
//    功能：
//				获取实际连接到伺服驱动器的逻辑轴屏蔽字
//
//    参数：
//
//    描述：
//
//	  返回：
//				返回逻辑轴屏蔽字
//
////////////////////////////////////////////////////////////////////////
extern Bit32 hdict_get_nc_axis_mask(void);

#endif
